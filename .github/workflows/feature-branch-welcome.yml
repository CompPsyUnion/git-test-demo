name: Feature branch welcome

# This workflow will run when a new feature branch is created
on:
  workflow_dispatch:
  create:

# Reference: https://docs.github.com/en/actions/security-guides/automatic-token-authentication
permissions:
  # Need `contents: read` to checkout the repository
  # Need `contents: write` to update files
  contents: write

jobs:
  # Get the current branch info and validate it
  validate_branch:
    name: Validate branch
    runs-on: ubuntu-latest
    outputs:
      is_feature_branch: ${{ steps.check_branch.outputs.is_feature_branch }}
    steps:
      - name: Check if feature branch
        id: check_branch
        run: |
          # Check if this is a branch creation and it's a feature branch
          if [[ "${{ github.event_name }}" == "create" && \
                "${{ github.ref_type }}" == "branch" && \
                "${{ github.ref_name }}" =~ ^feature/.+ ]]; then
            echo "is_feature_branch=true" >> $GITHUB_OUTPUT
          else
            echo "is_feature_branch=false" >> $GITHUB_OUTPUT
          fi

  insert-welcome-line:
    name: Update files for feature branch
    needs: validate_branch
    if: needs.validate_branch.outputs.is_feature_branch == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Show current branch
        run: |
          echo "Ref: $GITHUB_REF"

      - name: Update checkboxes in README.md
        run: |
          set -euo pipefail
          file=README.md
          
          if [ ! -f "$file" ]; then
            echo "File $file not found, exiting."
            exit 0
          fi
          
          # Create a temporary file for the modified content
          touch "$file.tmp"
          
          # Replace unchecked boxes with checked ones for specific items
          while IFS= read -r line; do
            if [[ "$line" == "* [ ] Create a new branch" ]] || [[ "$line" == "* [ ] Publish the new branch" ]]; then
              echo "${line/\[ \]/\[x\]}" >> "$file.tmp"
            else
              echo "$line" >> "$file.tmp"
            fi
          done < "$file"
          
          # Replace the original file with the modified content
          mv "$file.tmp" "$file"

      - name: Insert welcome message into practice.md (idempotent)
        run: |
          set -euo pipefail
          file=practice.md
          pattern='You can complete them step by step to get familiar with version control workflows.'
          insert='Great! You have successfully created a branch. Next, create a yourname.txt file.'

          if [ ! -f "$file" ]; then
            echo "File $file not found, exiting."
            exit 0
          fi

          # If the line already exists, do nothing
          if grep -Fq "$insert" "$file"; then
            echo "Insert line already present. Skipping."
            exit 0
          fi

          # Insert the new line after the paragraph that matches $pattern
          awk -v pat="$pattern" -v ins="$insert" '{ print $0; if ($0 == pat) { print ""; print ins } }' "$file" > "$file.tmp" && mv "$file.tmp" "$file"

      - name: Commit and push changes
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add practice.md README.md || true
          # If there are no changes to commit, exit cleanly
          if git diff --staged --quiet && git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "docs: add branch-created instruction and update checklist"
          # Push back to the same branch that was created
          git push origin "refs/heads/${BRANCH}"
